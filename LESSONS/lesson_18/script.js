//–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ—Å—Ç—å

//–°–∏–Ω–∑—Ä–æ–Ω–Ω–∏–π –∫–æ–¥ –≤–∏–∫–æ–Ω—É—î—Ç—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É( –Ω–µ –ø–µ—Ä–µ–∑–æ–¥–∏—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –ø–æ–∫–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø–æ—Ç–æ—á–Ω–∏–π)
//–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∫–æ–¥ - setTimeout, fetch() –∞—Å–∏–Ω–∑—Ä–æ–Ω–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ñ(–≤–æ–Ω–∏ –ø–µ—Ä–µ–¥–∞—é—Ç —Å–≤–æ—é —Ä–æ–±–æ—Ç—É —É –≤–µ–± –ê–ü–ò , —ñ –≤—ñ–¥–±—É–≤–∞—é—Ç—å—Å—è –ø—ñ–∑–Ω—ñ—à–µ)

// console.log("–ü–æ—á–∞—Ç–æ–∫");

// setTimeout(() => {
//   console.log("–¶–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∫–æ–¥!");
// }, 2000);

// console.log("–ö—ñ–Ω–µ—Ü—å");
//=================ASYNc –§—É–Ω–∫—Ü—ñ—è======================================

// async function myFunction() {
//   return "‚úÖ —Ü–µ `async` —Ñ—É–Ω–∫—Ü—ñ—è";
// }

// myFunction(); // async - –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ —è–∫–µ —Ä–æ–±–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—é

//==========================================
// async function fetchData() {
//   return fetch("https://jsonplaceholder.typicode.com/users/1");
// }

// console.log(fetchData());
//==========================================
// async function fetchData() {
//   let response = await fetch("https://jsonplaceholder.typicode.com/users/1");

//   let user = await response.json(); //–º–µ—Ç–æ–¥ json —Ç–∞–∫–æ–∂ –≤—ñ–¥–±—É–≤–∞–∂—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –±–æ —â–æ–± –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –¥–∞–Ω—ñ —Ç–∞–∫–æ–∂ –ø–æ—Ç—Ä—ñ–±–µ–Ω —è–∫–∏–π—Å—å —á–∞—Å
//   console.log(user);
// }

// fetchData(); //—Ü–µ –∞—Å—Å–∏–Ω–∑—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∞–ª–µ –∑–∞–≤–¥–∞–∫–∏ –∫–ª—é—á–æ–≤–æ–º—É —Å–ª–æ–≤—É await , –≤—Å–µ –≤—ñ–¥—å—É–≤–∞–∂—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
//==========================================
//await - –¥–∞—î —Å–º–æ–≥—É –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –∞—Å–∏–Ω–∑—Ä–æ–Ω–Ω–∏–º –∫–æ–¥–æ–º —Ç–∞–∫, –Ω—ñ–±–∏ –≤—ñ–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π
//==================Promise===============================
//Promice - 3 —Å—Ç–∞–Ω–∏ : —É—Å–ø—ñ—à–Ω–∏–π (resolved) : —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ (regected) : –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è (pending)
//==========================================
//Resolve
// const myPromise = new Promise((resolve, reject) => {
//   setTimeout(() => {
//     let success = true;

//     if (success) {
//       resolve("‚úÖ–î–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ!");
//     } else {
//       reject("‚ùå–ü–æ–º–∏–ª–∫–∞!");
//     }
//   }, 2000);
// });

// console.log("‚è≥–û—á—ñ–∫—É—î–º–æ...");

// myPromise
//   .then((result) => console.log(result)) // (–ü–æ—Ç—ñ–º) - —Å–ø—Ä–∞—Ü—å–æ–≤—É—î —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ –∫–æ–ª–∏ –Ω–∞–º –ø–æ–≤–µ—Ä–Ω—É–ª–æ—Å—å resolve
//   .catch((error) => console.error(error)) // –≤—ñ–¥–ª–æ–≤–ª—é—î –ø–æ–º–∏–ª–∫—É , —Å–ø—Ä–∞—Ü–±–æ–≤—É—î —Ç–æ–¥—ñ –∫–æ–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î reject
//   .finally(() => console.log("üü® –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")); //–≤—ñ–¥–±—É–≤–∞—î—Ç—Å—è –≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ —â–æ –≤ –Ω–∞—Å –≤—ñ–¥–±—É–ª–æ—Å—å
//==========================================
//Pending (–¥–µ—Ñ–æ–ª—Ç–Ω–∏–π —Å—Ç–∞–Ω promise) –ø–æ—á–∞—Ç–∫–æ–≤–∏–π
//==========================================
// fetch("https://jsonplaceholder.typicode.com/users/1")
//   .then((response) => response.json())
//   .then((user) => console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user))
//   .catch((error) => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", error));
//==========================================
//async await –Ω–∞–∫—Ä–∞—â–∏–π —Å–ø–æ—Å—ñ–± –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏

//===================Event Loop=============================
//call stack - –æ—Å–Ω–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫ –∑–∞–¥–∞—á

//WEB API (–±—Ä–∞—É–∑–µ–Ω—Ä–Ω—ñ API) –æ–±—Ä–æ–±–ª—é—î –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ñ

//Task Queue (–ß–µ—Ä–≥–∞ –∑–∞–≤–¥–∞–Ω—å) —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —è–∫—ñ –±—É–ª–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–º–∏ —è–∫—ñ –º–∞—é –±—É—Ç–∏ –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—ñ –∑–Ω–æ–≤—É –≤ call stack

//Microtask Queue (—á–µ—Ä–≥–∞ –º—ñ–∫—Ä–æ–∑–∞–¥–∞–Ω—å) - –º–∞—î –≤–∏—â–∏–π –ø—Ä–∏–æ—Ä—ñ—Ç–µ—Ç

//Event Loop - —Ü–µ –º–µ–∑–∞–Ω—ñ–∑–º —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î call stack —ñ —è–∫—à–æ –≤—ñ–Ω –ø—É—Å—Ç–∏–π –Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –∑–∞–≤–¥–∞–Ω–Ω—è –≤ –æ–¥–Ω—ñ–π —ñ–∑ –¥–≤–æ—Ö —á–µ—Ä–≥

//===================Event Loop=============================
//–ê—Å–æ–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∫–æ–¥ –≤—ñ–¥–±—É–≤–∞–∂—î—Ç—Å—è –∑–∞–≤–∂–¥–∏ –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ!!!
// console.log("–ü–æ—á–∞—Ç–æ–∫"); //call stack

// setTimeout(() => {
//   console.log("–¶–µ –∞—Å–∏–Ω–∑—Ä–æ–Ω–Ω–∏–π –∫–æ–¥!"); //—Å–ø–æ—á–∞—Ç–∫—É –ø–æ–ø–∞–≤ —É WEB API —ñ –ø—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –≤—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–∞–≤—Å—è –≤—ñ–Ω –ø–æ–ø–∞–¥–∞—î –≤ —á–µ—Ä–≥—É –∑–∞–≤–¥–∞–Ω—å
// }, 2000);

// console.log("–ö—ñ–Ω–µ—Ü—å"); //call stack

//==========================================

// console.log("A");

// setTimeout(() => {
//   console.log("B");
// }, 0);

// console.log("C");
//==========================================
//–º—ñ–∫—Ä–æ –∑–∞–≤–¥–∞–Ω–Ω—è –º–∞—î –ø—Ä—ñ–æ—Ä—ñ—Ç–µ—Ç

// console.log("A");

// setTimeout(() => console.log("B"), 0);

// Promise.resolve().then(() => console.log("C")); //microtask

// console.log("D");

//Call stack - –∑–±–µ—Ä—ñ–≥—é—Ç—Å—è –≤—Å—ñ —Å–∏–Ω–∑—Ä–æ–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ñ
//WEB API - –∑–±–µ—Ä—ñ–≥–∞—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ñ –ø–æ–∫–∏ –≤–æ–Ω–∏ –Ω–µ –≤–∏–∫–æ–Ω–∞—é—Ç—Å—è
//==========================================
